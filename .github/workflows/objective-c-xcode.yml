name: Xcode - Build and Analyze

on:
  push:
    branches: [ "master", "dev*" ]
  pull_request:
    branches: [ "master", "dev*" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_ios:
    runs-on: macos-latest
    env:
      SHEME: Runner
      BUILD_CONFIGURATION: Release
      TEAM_ID: 64H5U3LG67
      PROVISIONING_PROFILE: 471e1388-37bb-4b51-a69c-e555ec425b51
      CODE_SIGN_IDENTITY: "Apple Distribution: JiHua Lai (64H5U3LG67)"

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install the Apple certificate and provisioning profile
        env:
            BUILD_CERTIFICATE_BASE64: ${{ secrets.P12_BASE64 }}
            P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
            BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
            KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
            # create variables
            CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
            PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
            KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
            # import certificate and provisioning profile from secrets
            echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
            echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
            # create temporary keychain
            security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
            security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
            security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
            # import certificate to keychain
            security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
            security list-keychain -d user -s $KEYCHAIN_PATH
            # apply provisioning profile
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
      - name: Setup React Native
        run: |
          yarn install
          npm run ios-build
          
      - name: Setup Flutter
        run: |
          cd ios/Flutter/afjflutter
          echo $PWD
          flutter clean
          flutter pub get
          flutter build ios --release --no-codesign
        
      - name: Pod install
        run: |
          cd ios
          echo $PWD
          pod install

      - name: Clean
        run: |
          cd ios
          echo $PWD
          xcodebuild -workspace AFJ-iOS.xcworkspace -scheme AFJ-iOS clean   
          
      - name: Build
        run: |
          cd ios
          echo $PWD
          mkdir $PWD/build
          xcodebuild -workspace AFJ-iOS.xcworkspace -scheme AFJ-iOS -configuration Debug -archivePath $PWD/build/AFJ-iOS.xcarchive -allowProvisioningUpdates -destination 'platform=iOS Simulator,OS=15.5,name=iPhone 13 Pro Max' archive CODE_SIGN_IDENTITY="${{ secrets.CODE_SIGN_IDENTITY }}" DEVELOPMENT_TEAM=${{ secrets.TEAM_ID }}
         
